---
import { t } from "~/i18n/labels";

import Section from "~/components/Section.astro";

function toPercent(rate: number) {
  return `${(rate * 100).toFixed(2)}%`
}

const projects= {
    'https://wonderfruit.co/': 'RN APP',
    'https://amity.co/': 'TS SDK',
    'https://upera.tv/': 'RN APP/Web App',
    'http://ovisit.ir/': 'RN APP',
    'https://linksee.me/': '',
    'https://headstart.work/': '',
    'https://komodaa.com/': '',
    'https://houseno4.org/': '',
    'https://fooladino.com/': ''
};

const skillsets= [
  'javascript',
  'react',
  'reactnative',
  'node',
  'htmlcss',
  'monorepos',
  'cicd',
  'php',
  'vuejs',
  'linux',
  'docker',
  'aws',
  'mysql'
];

const opensource = [
  'react native eject',
  'react native elegant',
  'multiple talks in Iran React Community',
];
---

<Section class="skillsets" title={t('skills')}>
  <section class="skillset">
    <h3>{t('skills')}</h3>
      <dl>
        {skillsets.map((skill) => (
          <dt>{t(skill)}</dt>
        ))}
      </dl>
  </section>
  <section class="skillset">
    <h3>{t('projects')}</h3>
    <dl>
        {Object.entries(projects).map(([name, project]) => (
            <dt><a href="name" target="_blank">{name}{project !== '' && ` (${project})`}</a></dt>
        ))}
    </dl>
  </section>
  <section class="skillset">
    <h3>{t('opensource')}</h3>
      <dl>
        {opensource.map((os) => (
          <dt>{t(os)}</dt>
        ))}
      </dl>
  </section>
</Section>

<style>
  .skillsets {
    grid-area: skillsets;
    padding: 2.5em 1.5em;
    border-top: 1px solid #eaeaea;
  }

  .skillset + .skillset {
    margin-top: 1.5em;
  }

  .skillset {
    color: var(--primary);
  }

  .skillset:hover {
    color: var(--strong);
  }

  .skillset h3 {
    margin: 0 0 .5em;
    font-family: 'Raleway', sans-serif;
    font-size: 1em;
  }

  .skillset dl {
    display: block;
    /* grid-template-columns: auto min-content;
    grid-gap: calc(.25em/.9) 0; */
    align-items: center;
    font-family: 'Arapey', serif;
    font-size: 1em;
  }

  .skillset dt {
    display: flex;
    margin-right: 1em;
    color: var(--secondary);
    white-space: nowrap;
  }

  /* .skillset dt:after {
    flex: 1 1 0%;
    content: '........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................';
    width: 1px;
    padding: 0 .25em;
    overflow: hidden;
  } */

  .skillset dd {
    position: relative;
    text-align: end;
    display: inline-block;
    overflow: hidden;
    width: 6em;
    height: .5em;
    border-radius: 1em;
    text-indent: 9999em;
  }

  .skillset dd:before,
  .skillset dd:after {
    content: '';
    position: absolute;
    display: inline-block;
    left: 0;
    top: 0;
    height: inherit;
    border-radius: inherit;
    color: inherit;
  }

  .skillset dd:before {
    width: 100%;
    background: var(--light);
  }

  .skillset dd:after {
    width: var(--value, 0);
    background: currentColor;
  }

  @media screen and (min-width: 768px), print {
    .skillsets {
      border: none;
    }
  }
</style>
